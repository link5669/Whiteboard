{"version":3,"sources":["components/swatch.js","App.js","index.js"],"names":["Swatch","setToolType","className","title","onClick","rough","generator","midPointBtw","p1","p2","x","y","App","useState","elements","setElements","isDrawing","setIsDrawing","points","setPoints","action","setAction","toolType","nameFieldState","setNameFieldState","name","setName","monitor","setMonitor","newestData","setNewestData","useEffect","person","length","canvas","document","getElementById","context","getContext","lineCap","moveTo","clientX","clientY","beginPath","i","midPoint","quadraticCurveTo","lineTo","stroke","axios","get","then","e","arr","Object","entries","data","forEach","entry","key","value","console","log","push","post","map","item","id","width","window","innerWidth","height","innerHeight","onMouseDown","newEle","transparency","state","clearRect","onMouseMove","onMouseUp","closePath","onChange","target","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b447f711.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Swatch({ setToolType }) {\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <div>\n            <button\n              title=\"Pencil\"\n              onClick={() => {\n                setToolType(\"pencil\");\n              }}\n            >\n              Pencil\n            </button>\n            <button\n              title=\"Eraser\"\n              onClick={() => {\n                setToolType(\"eraser\");\n              }}\n            >\n              Eraser\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Swatch from \"./components/swatch\";\nimport rough from \"roughjs/bundled/rough.esm\";\nimport axios from \"axios\";\n\nrough.generator();\n\nconst midPointBtw = (p1, p2) => {\n  return {\n    x: p1.x + (p2.x - p1.x) / 2,\n    y: p1.y + (p2.y - p1.y) / 2,\n  };\n};\n\nexport const adjustElementCoordinates = (element) => {\n  const { type, x1, y1, x2, y2 } = element;\n  console.log(type)\n  if (x1 < x2 || (x1 === x2 && y1 < y2)) {\n    return { x1, y1, x2, y2 };\n  } else {\n    return { x1: x2, y1: y2, x2: x1, y2: y1 };\n  }\n};\n\n\n\nfunction App() {\n  const [elements, setElements] = useState([]);\n  const [isDrawing, setIsDrawing] = useState(false);\n\n  const [points, setPoints] = useState([]);\n  // const [path, setPath] = useState([]);\n\n  const [action, setAction] = useState(\"none\");\n  const [toolType, setToolType] = useState(\"pencil\");\n\n  const [nameFieldState, setNameFieldState] = useState(\"\")\n  const [name, setName] = useState(\"\")\n\n  const [monitor, setMonitor] = useState(false)\n\n  const [newestData, setNewestData] = useState({})\n\n  useEffect(() => {\n    for (let person = 0; person < newestData.length; person++) {\n      const canvas = document.getElementById(newestData[person].name);\n      if (canvas == null) {\n        return\n      }\n      const context = canvas.getContext(\"2d\");\n\n      context.lineCap = 5;\n      context.moveTo(newestData[person].points[0].clientX, newestData[person].points[0].clientY);\n      context.beginPath();\n      for (let i = 0; i < newestData[person].points.length; i++) {\n        let clientX = newestData[person].points[i].clientX / newestData.length\n        let clientY = newestData[person].points[i].clientY / newestData.length\n\n        var midPoint = midPointBtw(clientX, clientY);\n        context.quadraticCurveTo(clientX, clientY, midPoint.x, midPoint.y);\n        context.lineTo(clientX, clientY);\n        context.stroke();\n      }\n    }\n  }, [newestData])\n\n  const handleMouseDown = (e) => {\n    console.log(toolType);\n    const { clientX, clientY } = e;\n    const canvas = document.getElementById(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n\n    if (toolType === \"pencil\") {\n      setAction(\"sketching\");\n      setIsDrawing(true);\n\n      const transparency = \"1.0\";\n      const newEle = {\n        clientX,\n        clientY,\n        transparency,\n      };\n      setPoints((state) => [...state, newEle]);\n\n      context.lineCap = 5;\n      context.moveTo(clientX, clientY);\n      context.beginPath();\n    } else if (toolType === \"eraser\") {\n      setAction(\"erasing\")\n      const canvas = document.getElementById(\"canvas\");\n      const context = canvas.getContext(\"2d\");\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      setPoints([])\n      setElements([])\n\n    }\n  };\n\n  const handleMouseMove = (e) => {\n    const canvas = document.getElementById(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n    const { clientX, clientY } = e;\n\n    if (action === \"sketching\") {\n      if (!isDrawing) return;\n\n      const transparency = points[points.length - 1].transparency;\n      const newEle = { clientX, clientY, transparency };\n\n      setPoints((state) => [...state, newEle]);\n      var midPoint = midPointBtw(clientX, clientY);\n      context.quadraticCurveTo(clientX, clientY, midPoint.x, midPoint.y);\n      context.lineTo(clientX, clientY);\n      context.stroke();\n    }\n  };\n  const handleMouseUp = () => {\n    if (action === \"sketching\") {\n      const canvas = document.getElementById(\"canvas\");\n      const context = canvas.getContext(\"2d\");\n      context.closePath();\n      const element = points;\n      setPoints([]);\n      // setPath((prevState) => [...prevState, element]); //tuple\n      setIsDrawing(false);\n      console.log(elements)\n      if (name !== \"monitor\") axios.post(\"http://server.milesacq.com:3214/appendData\", { name: name, points: points })\n    } else {\n      setAction(\"erasing\")\n      setElements([])\n    }\n    setAction(\"none\");\n  };\n  return (\n    (monitor ? (\n      <>\n        <button onClick={() => {\n          axios.get(\"http://:3214/getData\").then((e) => {\n            let arr = []\n            Object.entries(e.data).forEach((entry) => {\n              const [key, value] = entry;\n              console.log(key)\n              arr.push(value)\n            });\n            console.log(arr)\n            setNewestData(arr)\n          })\n        }}>Fetch</button>\n        <button onClick={() => {\n          axios.post(\"http://server.milesacq.com:3214/eraseData\").then(() => {\n            axios.get(\"http://server.milesacq.com:3214/getData\").then((e) => {\n              let arr = []\n              Object.entries(e.data).forEach((entry) => {\n                const [key, value] = entry;\n                console.log(key)\n                arr.push(value)\n              });\n              console.log(arr)\n              setNewestData(arr)\n            })\n          })\n        }}>Erase data</button>\n        {newestData.length > 0 &&\n          newestData.map((item) => {\n            return (\n              <div key={item.name}>\n                <h2>{item.name}</h2>\n                <canvas\n                  id={item.name}\n                  className=\"App\"\n                  width={window.innerWidth / newestData.length}\n                  height={window.innerHeight / newestData.length}\n                >\n                  Canvas\n                </canvas>\n              </div>\n            )\n          })\n        }\n      </>\n\n    ) : (\n      (name ? (\n        <div>\n          <div>\n            <Swatch setToolType={setToolType} />\n          </div>\n          <canvas\n            id=\"canvas\"\n            className=\"App\"\n            width={window.innerWidth}\n            height={window.innerHeight}\n            onMouseDown={handleMouseDown}\n            onMouseMove={handleMouseMove}\n            onMouseUp={handleMouseUp}\n          >\n            Canvas\n          </canvas>\n        </div>\n      ) : (\n        <div>\n          <h2>Enter your name:</h2>\n          <input onChange={(e) => { setNameFieldState(e.target.value) }}></input>\n          <button onClick={() => {\n            if (nameFieldState === 'monitor') {\n              setMonitor(true)\n            } else { setName(nameFieldState) }\n          }}>Submit</button>\n        </div>\n      ))\n    ))\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}